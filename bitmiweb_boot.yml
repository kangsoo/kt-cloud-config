configuration:  
  projectName: bitmiweb_boot

server:
  port: 8080
  display-name: bitmiweb_boot
  session:
    timeout: 0
    cookie.max-age: 0
  context-path: /bitmiweb_boot
#====================================================================================
# https: ssl 
#====================================================================================
#  ssl:
#    port: 8443
#    key-store: classpath:bitcomputer.pfx
#    key-store-password: bitcom1234
#    key-password: bitcom1234
#    keyStoreType: PKCS12
#    #keyAlias: bitmiweb_boot
#    tempFileName: bitcomputer
#    tempFileExt: .pfx
#    fileName: bitcomputer.pfx
#    #ciphers: ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA
#    #protocol: TLS      
#  http:
#    port: 8080

# MULTIPART (MultipartProperties)
spring:
  http:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  datasource:
    url: 'jdbc:log4jdbc:oracle:thin:@122.199.232.165:1521:BITMIHIS'
    username: bitmi0002
    password: bitmiora
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    tomcat:
      url: 'jdbc:log4jdbc:oracle:thin:@122.199.232.165:1521:BITMIHIS'
      username: bitmi0002
      password: bitmiora
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      test-while-idle: true
      test-on-borrow: true
      validation-query: select 'NOT_SQL_LOG' from dual
  redis:
    host: 211.253.31.109
    password: secret
    port: 6379
  session:
    store-type: redis

sample:
  foo: 'this is foo 입니다.'
  bar: 'this is bar 입니다.'

message:
  greeting: bitmiweb_boot == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR
  
---
spring:
  profiles: dev
  
configuration:  
  projectName: bitmiweb_boot-dev
  
sample:
  foo: ${SPRING_PROFILES_ACTIVE:dev}
  bar: 'this is dev-bar 입니다. 이건 내가 바꿨지ㅗㅇ~'

message:
  greeting: bitmiweb_boot-dev == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR

nhic:
  domain: http://ws.nhic.or.kr:1443/services/nhic?WSDL
    
cypto:
  properties: 'C:\bitmiweb_boot\bin\xecuredb\conf\xdsp_pool.properties'
    
---
spring:
  profiles: prod

configuration:  
  projectName: bitmiweb_boot-prod
  
sample:
  foo: 'this is prod-foot 입니다.'
  bar: 'this is prod-bar 입니다.'

message:
  greeting: bitmiweb_boot-prod == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR

nhic:
  domain: http://ws.nhic.or.kr:1443/services/nhic?WSDL
  
cypto:
  properties: 'C:\bitmiweb_boot\bin\xecuredb\conf\xdsp_pool.properties'

---
spring:
  profiles: test

configuration:  
  projectName: bitmiweb_boot-test
  
sample:
  foo: 'this is test-foot 입니다.'
  bar: 'this is test-bar 입니다.'

message:
  greeting: bitmiweb_boot-test == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR

nhic:
  domain: http://ws.nhic.or.kr:1443/services/nhic?WSDL
  
cypto:
  properties: 'C:\bitmiweb_boot\bin\xecuredb\conf\xdsp_pool.properties'

---
spring:
  profiles: linux

configuration:  
  projectName: bitmiweb_boot-linux
  
sample:
  foo: 'this is linux-foot 입니다.'
  bar: 'this is linux-bar 입니다.'

message:
  greeting: bitmiweb_boot-linux == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR

nhic:
  domain: http://ws.nhic.or.kr:1443/services/nhic?WSDL
  
cypto:
  properties: '/root/bitmiwebserver/xecuredb/conf/xdsp_pool.properties'

---
spring:
  profiles: ktcloud

configuration:  
  projectName: bitmiweb_boot-ktcloud
  
sample:
  foo: 'this is ktcloud-foot 입니다.'
  bar: 'this is ktcloud-bar 입니다.'

message:
  greeting: bitmiweb_boot-ktcloud == 진짜 되네~ ㅋㅋㅋ 와우 진짜인가 봐요~ 안녕하세요? 김강수입니다. 만나서 반갑습니다.!!!!
  locale: ko_KR

nhic:
  domain: http://ws.nhic.or.kr:1443/services/nhic?WSDL
  
cypto:
  properties: '/root/bitmiwebserver/xecuredb/conf/xdsp_pool.properties'
